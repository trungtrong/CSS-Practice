/*  declare CSS custom property */
:root {
  /* e50914 : color of button of Netflix */
  --primary-color: #e50914;
  --dark-color: #141414;
}

*, *::after, *::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
/*  global CSS */

body {
  font-family: Arial, Helvetica, sans-serif;
  -webkit-font-smoothing: antialiased;
  background: #000;
  color: #999;
}

/*  icomoon */
@font-face {
  font-family: "icomoon";
  src: url("../fonts/icomoon.woff") format("woff");

}

i[class^="icon-"], i[class*="icon-"] {
  font-family: icomoon!important;
}

i {
  font-style: normal;
}

/*  Icon */
.icon-chevron-right:before {
  content: "\e900";
}

.icon-door-open::before {
  content: "\e903";
}

.icon-tablet::before {
  content: "\e902";
}

.icon-tags::before {
  content: "\e901";
}

.icon-cross::before {
  content: "\ea0f";
}

.icon-check::before {
  content: "\ea10";
}

/* List */
ul {
  list-style: none;
}

h1, h2, h3, h4 {
  color: #fff;
}

a {
  color: #fff;
  text-decoration: none;
}

p {
  margin: 0.5rem 0;
}

img {
  /* to make images responsive depending on width of its wraper */
  width: 100%;
}

/*  Text styles */
.text-xl {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.text-lg {
  font-size: 1.6rem;
  margin-bottom: 1rem;
  color: #fff;
}

/* text medium */
.text-md {
  font-size: 1.3rem;
}

.text-center {
  text-align: center;
}

.text-dark {
  color: #999;
}

/* button */
.btn {
  display: inline-block;
  /* using custom property var() */
  background: var(--primary-color);
  color: #fff;
  
  /* scaling following the device*/
  padding: 0.4rem 1.3rem;
  font-size: 1rem;
  text-align: center;

  /* remove border */
  border: none;
  cursor: pointer;
  outline: none;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.45);
  border-radius: 2px;
}

.btn:hover {
  opacity: 0.9;
}

.btn-rounded {
  border-radius: 5px;
}

.btn-xl {
  font-size: 2rem;
  padding: 1.5rem 2.1rem;
  text-transform: uppercase;
}

.btn-lg {
  font-size: 1rem;
  padding: 0.8rem 1.3rem;
  text-transform: uppercase;
}


/*            Specific styles            */
header.showcase {
  width: 100%;
  /* scaling height of view port*/
  height: 93vh;
  position: relative;

  background: url('../images/background.jpg') no-repeat;
  background-size: cover;
  background-position: center;

  /* background: url() no-repeat center center/cover */
}

/* to create an overlay */
header.showcase::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  background: rgba(0, 0, 0, 0.6);
  
  /*inset = overlapse the shadow from outer to inner 
  + 120px: left  ;  -120px: right
  + 200px: top    ; -200px: bottom
  250px: how thick the shadow 
  
  */
  box-shadow: inset 120px 200px 250px #000, inset -120px -100px 250px #000;

}

.showcase-top {
  position: relative;

  /* to overlay the showcase::after = overlay */
  z-index: 2;
  height: 90px;
}

.showcase-top img {
  width: 170px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.showcase-top a {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translate(-50%, -50%);
}

.showcase-content {
  /* move depending on its parent , but consistent on its position */
  position: relative;
  /* to overlay the showcase::after = overlay */
  z-index: 2;
  margin: auto;
  
  /* apply for all items */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  /* text-align: center; */
  margin-top: 9rem;
}

.showcase-content h1 {
  font-weight: 700;
  font-size: 5.2rem;
  line-height: 1.1;
  margin: 0 0 2rem;
}

.showcase-content p {
  text-transform: uppercase;
  color: #fff;
  font-weight: 400;
  font-size: 1.9rem;
  line-height: 1.25;
  margin: 0 0 2rem;
}



/*     Section: Tabs      */
.tabs {
  background: var(--dark-color);
  padding-top: 1rem;
  border-bottom: 3px solid #3d3d3d;
}

.tabs .container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 1rem;
  
  /* justify content of wrapper */
  justify-content: center;
  /* align content of grid items */
  align-items: center;
  /*  b/c there is Text <p> */
  text-align: center
}

/* container: on the center */
.container {
  max-width: 70%;
  margin: auto;
  overflow: hidden;
  padding: 0 2rem;
}

.tabs i {
  font-size: 3rem;
  font-weight: 700;
  /*  three icons have #999 color b/c body {color: #999}  */
}


/* hover each tab: door-open, tablet, tags */
.tabs .container > div {
  color: #999;
  transition: color 1s;
  cursor: pointer; 
}

.tab-border {
  border-bottom: var(--primary-color) 4px solid;
}

.tabs .container > div:hover {
  color: #fff;
}

/* increase the size of tab's text  */
.tabs p {
  font-size: 1.2em;
  padding-top: 0.5em;
  margin: 0;
}

/* Tab Content */
#tab-1-content .tab-1-content-inner {
  display: grid;
  grid-template-columns: repeat(2, 50%);
  grid-gap: 2rem;
  align-items: center;
  justify-content: center;
}

/*  adding padding for tab-content */
.tab-content {
  padding: 3rem 0;
  background-color: #000;
  color: #fff;
}

/* Hide content initially , see in todo.js*/
#tab-1-content {
  display: none;
}

#tab-2-content {
  display: none;
}

#tab-3-content {
  display: none;
}

/* to display the tab content of each item */

.show {
  display: block !important;
  /* adding !important, b/c it is less than #tab-1-content: ID */
}

#tab-2-content .tab-2-content-top {
  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-gap: 1rem;
  justify-content: center;
  align-items: center;
}

#tab-2-content-2 .tab-2-content-bottom {
  margin-top: 2rem;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 2rem;
  justify-content: center;
  align-items: center;
  /*  b/c there is Text <p> */
  text-align: center;
}

/*            Table    */
.table {
  width: 100%;
  margin-top: 2rem;
  border-collapse: collapse;
  border-spacing: 0;
}

.table thead th {
  text-transform: uppercase;
  padding: 0.8rem;
}

.table tbody tr td {
  color: #999;
  padding: 0.8rem 1.2rem;
  text-align: center;
}

/* make the title of td starts on the left, not center */
.table tbody tr td:first-child {
  text-align: left;
}

/* event items have grey color */
.table tbody tr:nth-child(even) {
  background-color: #222;
}

/*       Footer      */
.footer {
  max-width: 75%;
  margin: 1rem auto;
  overflow: auto;
}

.footer, .footer a {
  color: #999;
  /* size of footer text */
  font-size: 0.9rem;  
}

.footer p.question {
  margin-bottom: 1.5rem;
}

.footer .footer-cols {
  display: grid; 
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 2rem;
}

.footer li {
  line-height: 1.9;
}

.footer li a:hover {
  text-decoration: underline;
}

/* Responsive */
@media(max-width: 960px) {
  .showcase {
    height: 70vh;
  }

  /* text of tabs */
  /* .hide-sm {
    display: none;
  } */

  /* move Netflix logo to the left side */
  .showcase-top img {
    left: 5%;
    top: 30%;
    transform: translate(0);
  }

  /* making text small  */
  .showcase-content h1 {
    font-size: 3.7rem;
    line-height: 1;
  }

  .showcase-content p {
    font-size: 1.5rem;
  }

  /* change size of button */
  .btn-xl {
    font-size: 1.5rem;
    padding: 1.4rem 2rem;
  }

  .text-xl {
    font-size: 1.5rem;
  }

  .text-lg {
    font-size: 1.3rem;
  }

  .text-md {
    font-size: 1rem;
  }

  .footer .footer-cols {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 700px) {
  .showcase::after {
    /* we edit shadow of overlay to have small shadow on smaller screen */
    box-shadow: inset 80px 80px 250px #000,
      inset -80px -80px 250px #000;

  }

  #tab-1-content .tab-1-content-inner {
    grid-template-columns: 1fr;
    text-align: center;
  }

  #tab-2-content .tab-2-content-top {
    display: block;
    text-align: center;
  }

  #tab-2-content .tab-2-content-bottom {
    grid-template-columns: 1fr;
  }
}








